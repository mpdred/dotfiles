set-option -g default-shell "/bin/bash"
set -g history-limit 100000 #default 2000

# display
# auto window rename
set-window-option -g automatic-rename
setw -g automatic-rename

#set-option -g pane-active-border-bg default
#set-option -g pane-active-border-fg default

## status bar
LOAD="(#(nproc)) #(cat /proc/loadavg)"
K8S_CONTEXT="#(basename `kubectl config current-context 2>/dev/null`)"
K8S_NAMESPACE="#(kubectl config get-contexts --no-headers | grep '*' | awk '{print $5}' | tr -d '[:space:]')"

GIT_BRANCH="#(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD)"
GIT_TAG="#(cd #{pane_current_path}; git describe --tags --long --dirty --always)"
GIT_CHANGES="#(cd #{pane_current_path}; git status | grep 'nothing to commit' && echo '' || echo '!')"
GIT="git::$GIT_BRANCH::$GIT_TAG$GIT_CHANGES"

TERRAFORM_WORKSPACE="#(cd #{pane_current_path}; terraform workspace show)"
TERRAFORM="tf::$TERRAFORM_WORKSPACE"

KUBERNETES_CONTEXT="#(basename `kubectl config current-context` 2>/dev/null)"
KUBERNETES_NAMESPACE="#(kubectl config get-contexts --no-headers | grep '*' | awk '{print $5}' | tr -d '[:space:]')"
KUBERNETES="k8s::$KUBERNETES_CONTEXT::$KUBERNETES_NAMESPACE"

LOAD="#(cpu)"
PWD="#(cd #{pane_current_path}; pwd_short)"

set -g status-justify "left"
set -g status-right "[$PWD]   $TERRAFORM   $KUBERNETES   $GIT   $LOAD"
set -g status-left "[#S] "

set-option -g status-position bottom
set -g status-interval 1
set -g status-left-length 50
set -g status-right-length 400
set -g status-style 'bg=default fg=default'


## loud / quiet
set -g visual-activity on
set -g visual-bell on
set -g visual-silence on
setw -g monitor-activity on
set -g bell-action none



# keyboard

setw -g mode-keys   vi    # when in copy/choice mode

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

## for nested tmux sessions
bind-key a send-prefix


## pane movement shortcuts
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R


## resize pane shortcuts
bind-key -r H resize-pane -L 10
bind-key -r J resize-pane -D 10
bind-key -r K resize-pane -U 10
bind-key -r L resize-pane -R 10



# mouse
#bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind-key -n WheelDownPane select-pane -t= \; send-keys -M
#set -g mouse on
